#!/usr/bin/python3
BANK_SIZE = 256
CHUNK_SIZE = 16
ADDRESS = 23

# dmpMemory
banks = [None]*8
banks[0] = bytearray(b'''\
\xFB\x00\x00\x3E\x00\x0B\x00\x36\x00\x01\x00\x02\x00\x03\x00\x00\
\x00\x65\x00\x54\xFF\xEF\x00\x00\xFA\x80\x00\x0B\x12\x82\x00\x01\
\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x28\x00\x00\xFF\xFF\x45\x81\xFF\xFF\xFA\x72\x00\x00\x00\x00\
\x00\x00\x03\xE8\x00\x00\x00\x01\x00\x01\x7F\xFF\xFF\xFE\x80\x01\
\x00\x1B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x40\x00\x00\x40\x00\x00\x00\x02\xCB\x47\xA2\x20\x00\x00\x00\
\x20\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x60\x00\x00\x00\
\x41\xFF\x00\x00\x00\x00\x0B\x2A\x00\x00\x16\x55\x00\x00\x21\x82\
\xFD\x87\x26\x50\xFD\x80\x00\x00\x00\x1F\x00\x00\x00\x05\x80\x00\
\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\
\x40\x00\x00\x00\x00\x00\x04\x6F\x00\x02\x65\x32\x00\x00\x5E\xC0\
\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\xFB\x8C\x6F\x5D\xFD\x5D\x08\xD9\x00\x7C\x73\x3B\x00\x6C\x12\xCC\
\x32\x00\x13\x9D\x32\x00\xD0\xD6\x32\x00\x08\x00\x40\x00\x01\xF4\
\xFF\xE6\x80\x79\x02\x00\x00\x00\x00\x00\xD0\xD6\x00\x00\x27\x10''')

banks[1] = bytearray(b'''\
\xFB\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\
\x00\x00\xFA\x36\xFF\xBC\x30\x8E\x00\x05\xFB\xF0\xFF\xD9\x5B\xC8\
\xFF\xD0\x9A\xBE\x00\x00\x10\xA9\xFF\xF4\x1E\xB2\x00\xCE\xBB\xF7\
\x00\x00\x00\x01\x00\x00\x00\x04\x00\x02\x00\x02\x02\x00\x00\x0C\
\xFF\xC2\x80\x00\x00\x01\x80\x00\x00\xCF\x80\x00\x40\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x14\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x09\x23\xA1\x35\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x03\x3F\x68\xB6\x79\x35\x28\xBC\xC6\x7E\xD1\x6C\
\x80\x00\xFF\xFF\x40\x00\x00\x00\x00\x00\xB2\x6A\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3F\xF0\x00\x00\x00\x30\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\
\x00\x00\x25\x4D\x00\x2F\x70\x6D\x00\x00\x05\xAE\x00\x0C\x02\xD0''')

banks[2] = bytearray(b'''\
\x00\x00\x00\x00\x00\x65\x00\x54\xFF\xEF\x00\x00\x00\x00\x00\x00\
\x00\x00\x01\x00\x00\x44\x00\x01\x00\x05\x8B\xC1\x00\x00\x01\x00\
\x00\x00\x00\x00\x00\x65\x00\x00\x00\x54\x00\x00\xFF\xEF\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x1B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x1B\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\
\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00''')

banks[3] = bytearray(b'''\
\xD8\xDC\xBA\xA2\xF1\xDE\xB2\xB8\xB4\xA8\x81\x91\xF7\x4A\x90\x7F\
\x91\x6A\xF3\xF9\xDB\xA8\xF9\xB0\xBA\xA0\x80\xF2\xCE\x81\xF3\xC2\
\xF1\xC1\xF2\xC3\xF3\xCC\xA2\xB2\x80\xF1\xC6\xD8\x80\xBA\xA7\xDF\
\xDF\xDF\xF2\xA7\xC3\xCB\xC5\xB6\xF0\x87\xA2\x94\x24\x48\x70\x3C\
\x95\x40\x68\x34\x58\x9B\x78\xA2\xF1\x83\x92\x2D\x55\x7D\xD8\xB1\
\xB4\xB8\xA1\xD0\x91\x80\xF2\x70\xF3\x70\xF2\x7C\x80\xA8\xF1\x01\
\xB0\x98\x87\xD9\x43\xD8\x86\xC9\x88\xBA\xA1\xF2\x0E\xB8\x97\x80\
\xF1\xA9\xDF\xDF\xDF\xAA\xDF\xDF\xDF\xF2\xAA\x4C\xCD\x6C\xA9\x0C\
\xC9\x2C\x97\x97\x97\x97\xF1\xA9\x89\x26\x46\x66\xB0\xB4\xBA\x80\
\xAC\xDE\xF2\xCA\xF1\xB2\x8C\x02\xA9\xB6\x98\x00\x89\x0E\x16\x1E\
\xB8\xA9\xB4\x99\x2C\x54\x7C\xB0\x8A\xA8\x96\x36\x56\x76\xF1\xB9\
\xAF\xB4\xB0\x83\xC0\xB8\xA8\x97\x11\xB1\x8F\x98\xB9\xAF\xF0\x24\
\x08\x44\x10\x64\x18\xF1\xA3\x29\x55\x7D\xAF\x83\xB5\x93\xAF\xF0\
\x00\x28\x50\xF1\xA3\x86\x9F\x61\xA6\xDA\xDE\xDF\xD9\xFA\xA3\x86\
\x96\xDB\x31\xA6\xD9\xF8\xDF\xBA\xA6\x8F\xC2\xC5\xC7\xB2\x8C\xC1\
\xB8\xA2\xDF\xDF\xDF\xA3\xDF\xDF\xDF\xD8\xD8\xF1\xB8\xA8\xB2\x86''')

banks[4] = bytearray(b'''\
\xB4\x98\x0D\x35\x5D\xB8\xAA\x98\xB0\x87\x2D\x35\x3D\xB2\xB6\xBA\
\xAF\x8C\x96\x19\x8F\x9F\xA7\x0E\x16\x1E\xB4\x9A\xB8\xAA\x87\x2C\
\x54\x7C\xB9\xA3\xDE\xDF\xDF\xA3\xB1\x80\xF2\xC4\xCD\xC9\xF1\xB8\
\xA9\xB4\x99\x83\x0D\x35\x5D\x89\xB9\xA3\x2D\x55\x7D\xB5\x93\xA3\
\x0E\x16\x1E\xA9\x2C\x54\x7C\xB8\xB4\xB0\xF1\x97\x83\xA8\x11\x84\
\xA5\x09\x98\xA3\x83\xF0\xDA\x24\x08\x44\x10\x64\x18\xD8\xF1\xA5\
\x29\x55\x7D\xA5\x85\x95\x02\x1A\x2E\x3A\x56\x5A\x40\x48\xF9\xF3\
\xA3\xD9\xF8\xF0\x98\x83\x24\x08\x44\x10\x64\x18\x97\x82\xA8\xF1\
\x11\xF0\x98\xA2\x24\x08\x44\x10\x64\x18\xDA\xF3\xDE\xD8\x83\xA5\
\x94\x01\xD9\xA3\x02\xF1\xA2\xC3\xC5\xC7\xD8\xF1\x84\x92\xA2\x4D\
\xDA\x2A\xD8\x48\x69\xD9\x2A\xD8\x68\x55\xDA\x32\xD8\x50\x71\xD9\
\x32\xD8\x70\x5D\xDA\x3A\xD8\x58\x79\xD9\x3A\xD8\x78\x93\xA3\x4D\
\xDA\x2A\xD8\x48\x69\xD9\x2A\xD8\x68\x55\xDA\x32\xD8\x50\x71\xD9\
\x32\xD8\x70\x5D\xDA\x3A\xD8\x58\x79\xD9\x3A\xD8\x78\xA8\x8A\x9A\
\xF0\x28\x50\x78\x9E\xF3\x88\x18\xF1\x9F\x1D\x98\xA8\xD9\x08\xD8\
\xC8\x9F\x12\x9E\xF3\x15\xA8\xDA\x12\x10\xD8\xF1\xAF\xC8\x97\x87''')

banks[5] = bytearray(b'''\
\x34\xB5\xB9\x94\xA4\x21\xF3\xD9\x22\xD8\xF2\x2D\xF3\xD9\x2A\xD8\
\xF2\x35\xF3\xD9\x32\xD8\x81\xA4\x60\x60\x61\xD9\x61\xD8\x6C\x68\
\x69\xD9\x69\xD8\x74\x70\x71\xD9\x71\xD8\xB1\xA3\x84\x19\x3D\x5D\
\xA3\x83\x1A\x3E\x5E\x93\x10\x30\x81\x10\x11\xB8\xB0\xAF\x8F\x94\
\xF2\xDA\x3E\xD8\xB4\x9A\xA8\x87\x29\xDA\xF8\xD8\x87\x9A\x35\xDA\
\xF8\xD8\x87\x9A\x3D\xDA\xF8\xD8\xB1\xB9\xA4\x98\x85\x02\x2E\x56\
\xA5\x81\x00\x0C\x14\xA3\x97\xB0\x8A\xF1\x2D\xD9\x28\xD8\x4D\xD9\
\x48\xD8\x6D\xD9\x68\xD8\xB1\x84\x0D\xDA\x0E\xD8\xA3\x29\x83\xDA\
\x2C\x0E\xD8\xA3\x84\x49\x83\xDA\x2C\x4C\x0E\xD8\xB8\xB0\xA8\x8A\
\x9A\xF5\x20\xAA\xDA\xDF\xD8\xA8\x40\xAA\xD0\xDA\xDE\xD8\xA8\x60\
\xAA\xDA\xD0\xDF\xD8\xF1\x97\x86\xA8\x31\x9B\x06\x99\x07\xAB\x97\
\x28\x88\x9B\xF0\x0C\x20\x14\x40\xB8\xB0\xB4\xA8\x8C\x9C\xF0\x04\
\x28\x51\x79\x1D\x30\x14\x38\xB2\x82\xAB\xD0\x98\x2C\x50\x50\x78\
\x78\x9B\xF1\x1A\xB0\xF0\x8A\x9C\xA8\x29\x51\x79\x8B\x29\x51\x79\
\x8A\x24\x70\x59\x8B\x20\x58\x71\x8A\x44\x69\x38\x8B\x39\x40\x68\
\x8A\x64\x48\x31\x8B\x30\x49\x60\xA5\x88\x20\x09\x71\x58\x44\x68''')

banks[6] = bytearray(b'''\
\x11\x39\x64\x49\x30\x19\xF1\xAC\x00\x2C\x54\x7C\xF0\x8C\xA8\x04\
\x28\x50\x78\xF1\x88\x97\x26\xA8\x59\x98\xAC\x8C\x02\x26\x46\x66\
\xF0\x89\x9C\xA8\x29\x51\x79\x24\x70\x59\x44\x69\x38\x64\x48\x31\
\xA9\x88\x09\x20\x59\x70\xAB\x11\x38\x40\x69\xA8\x19\x31\x48\x60\
\x8C\xA8\x3C\x41\x5C\x20\x7C\x00\xF1\x87\x98\x19\x86\xA8\x6E\x76\
\x7E\xA9\x99\x88\x2D\x55\x7D\x9E\xB9\xA3\x8A\x22\x8A\x6E\x8A\x56\
\x8A\x5E\x9F\xB1\x83\x06\x26\x46\x66\x0E\x2E\x4E\x6E\x9D\xB8\xAD\
\x00\x2C\x54\x7C\xF2\xB1\x8C\xB4\x99\xB9\xA3\x2D\x55\x7D\x81\x91\
\xAC\x38\xAD\x3A\xB5\x83\x91\xAC\x2D\xD9\x28\xD8\x4D\xD9\x48\xD8\
\x6D\xD9\x68\xD8\x8C\x9D\xAE\x29\xD9\x04\xAE\xD8\x51\xD9\x04\xAE\
\xD8\x79\xD9\x04\xD8\x81\xF3\x9D\xAD\x00\x8D\xAE\x19\x81\xAD\xD9\
\x01\xD8\xF2\xAE\xDA\x26\xD8\x8E\x91\x29\x83\xA7\xD9\xAD\xAD\xAD\
\xAD\xF3\x2A\xD8\xD8\xF1\xB0\xAC\x89\x91\x3E\x5E\x76\xF3\xAC\x2E\
\x2E\xF1\xB1\x8C\x5A\x9C\xAC\x2C\x28\x28\x28\x9C\xAC\x30\x18\xA8\
\x98\x81\x28\x34\x3C\x97\x24\xA7\x28\x34\x3C\x9C\x24\xF2\xB0\x89\
\xAC\x91\x2C\x4C\x6C\x8A\x9B\x2D\xD9\xD8\xD8\x51\xD9\xD8\xD8\x79''')

banks[7] = bytearray(b'''\
\xD9\xD8\xD8\xF1\x9E\x88\xA3\x31\xDA\xD8\xD8\x91\x2D\xD9\x28\xD8\
\x4D\xD9\x48\xD8\x6D\xD9\x68\xD8\xB1\x83\x93\x35\x3D\x80\x25\xDA\
\xD8\xD8\x85\x69\xDA\xD8\xD8\xB4\x93\x81\xA3\x28\x34\x3C\xF3\xAB\
\x8B\xF8\xA3\x91\xB6\x09\xB4\xD9\xAB\xDE\xFA\xB0\x87\x9C\xB9\xA3\
\xDD\xF1\x20\x28\x30\x38\x9A\xF1\x28\x30\x38\x9D\xF1\xA3\xA3\xA3\
\xA3\xF2\xA3\xB4\x90\x80\xF2\xA3\xA3\xA3\xA3\xA3\xA3\xA3\xA3\xA3\
\xA3\xB2\xA3\xA3\xA3\xA3\xA3\xA3\xB0\x87\xB5\x99\xF1\x28\x30\x38\
\x98\xF1\xA3\xA3\xA3\xA3\x97\xA3\xA3\xA3\xA3\xF3\x9B\xA3\x30\xDC\
\xB9\xA7\xF1\x26\x26\x26\xFE\xD8\xFF''')


dmpMemory = bytearray()
for i in range(len(banks)):
    dmpMemory += banks[i]

for i in range(len(dmpMemory)):
    if not i == 0 and not i % 16:
        print("")
    if not i % 256:
       print("Bank ",i//256) 
    print("0x{:02x}".format(dmpMemory[i]),end = "")

print("")

# divide in into chunks

chunks = []

count = 0
if ADDRESS % BANK_SIZE:
    chunks.append(ADDRESS % BANK_SIZE)
    print("ADDRESS: {:d}, chunkd[0]: {:d}: ".format(ADDRESS,chunks[0]))
    count += 1
    
for i in range(ADDRESS % BANK_SIZE,len(dmpMemory)-CHUNK_SIZE,CHUNK_SIZE):
    print(i)
    chunks.append(CHUNK_SIZE)
    count +=1
    
if (len(dmpMemory) - chunks[0]) % CHUNK_SIZE :
    chunks.append((len(dmpMemory) - chunks[0]) % CHUNK_SIZE)
    count += 1

print("total dmpMemory size: {:d}, no of chunks: {:d}".format(
    len(dmpMemory),count))
print("chunk sizes: ")
for i in range(len(chunks)):
    if not i == 0 and not i % 16:
        print("")
    print("{:d} ".format(chunks[i]),end="")
print("")

sum = 0
for i in range(len(chunks)):
    sum += chunks[i]
print("Total length of all chunks: {:d}, dmpSize: {:d}".format(
    sum,len(dmpMemory)))

pos = 0
for i in range(len(chunks)):
    for j in range(chunks[i]):
        print("0x{:02x} ".format(dmpMemory[pos + j]),end="")
    print("")
    pos += chunks[i]
